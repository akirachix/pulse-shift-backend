"""
Django settings for greensmtaani project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv


# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent
# load_dotenv(dotenv_path=BASE_DIR/'.env')
# SPOONACULAR_API_KEY = os.getenv('SPOONACULAR_API_KEY')




BASE_DIR = Path(__file__).resolve().parent.parent



SECRET_KEY = 'django-insecure-=%#twlb94*jgh^mypnp6)hqjje3i24&rdw#zz1vgp#fcs5^z0y'



DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1', 'd3ee-41-90-172-68.ngrok-free.app']




INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'products',
    'orders',
    'nutrition',
    'users',
    'payments',
    'api',
    'rest_framework',
    'django_crontab',
    'locations',
    


]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'greensmtaani.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'greensmtaani.wsgi.application'




DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'postgres',
        'USER': 'postgres.rjxovafjhiyqvcqypafr',
        'PASSWORD': 'lionfishdb624',
        'HOST': 'aws-0-eu-central-1.pooler.supabase.com',
        'PORT': '5432',
        'OPTIONS': {
            'options': '-c search_path=greens_mtaani,public'
        }
    }
}


CRONJOBS = [
    ('0 0 1 * *', 'api.tasks.fetch_monthly_recipes_task'),
 
]
# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators


AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]



LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True



STATIC_URL = 'static/'


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

DARAJA_CONSUMER_KEY = '0AubmfaECOKS6BnfpYTn1H0iTjr107rZEgGCFgBBO8kAuSRC'
DARAJA_CONSUMER_SECRET = 'ELiQioApJ547QQ0bjVDynb3Jodk7FUdaLxItpmEQJnkyUfJZ1bxmaMmjOCANlUr1'
DARAJA_SHORTCODE = '174379'
DARAJA_PASSKEY = 'bfb279f9aa9bdbcf158e97dd71a467cd2e0c893059b10f78e6b72ada1ed2c919'
DARAJA_BASE_URL = 'https://sandbox.safaricom.co.ke'
DARAJA_CALLBACK_URL = 'https://216e-41-90-172-68.ngrok-free.app/payments/callback/' 
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'nutrition_file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR,'api','nutrition_output.log'),
        },
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'nutrition': {
            'handlers': ['nutrition_file', 'console'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}
